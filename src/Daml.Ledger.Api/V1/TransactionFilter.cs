// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: com/digitalasset/ledger/api/v1/transaction_filter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.DigitalAsset.Ledger.Api.V1 {

  /// <summary>Holder for reflection information generated from com/digitalasset/ledger/api/v1/transaction_filter.proto</summary>
  public static partial class TransactionFilterReflection {

    #region Descriptor
    /// <summary>File descriptor for com/digitalasset/ledger/api/v1/transaction_filter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionFilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdjb20vZGlnaXRhbGFzc2V0L2xlZGdlci9hcGkvdjEvdHJhbnNhY3Rpb25f",
            "ZmlsdGVyLnByb3RvEh5jb20uZGlnaXRhbGFzc2V0LmxlZGdlci5hcGkudjEa",
            "KmNvbS9kaWdpdGFsYXNzZXQvbGVkZ2VyL2FwaS92MS92YWx1ZS5wcm90byLU",
            "AQoRVHJhbnNhY3Rpb25GaWx0ZXISXwoQZmlsdGVyc19ieV9wYXJ0eRgBIAMo",
            "CzJFLmNvbS5kaWdpdGFsYXNzZXQubGVkZ2VyLmFwaS52MS5UcmFuc2FjdGlv",
            "bkZpbHRlci5GaWx0ZXJzQnlQYXJ0eUVudHJ5Gl4KE0ZpbHRlcnNCeVBhcnR5",
            "RW50cnkSCwoDa2V5GAEgASgJEjYKBXZhbHVlGAIgASgLMicuY29tLmRpZ2l0",
            "YWxhc3NldC5sZWRnZXIuYXBpLnYxLkZpbHRlcnM6AjgBIk4KB0ZpbHRlcnMS",
            "QwoJaW5jbHVzaXZlGAEgASgLMjAuY29tLmRpZ2l0YWxhc3NldC5sZWRnZXIu",
            "YXBpLnYxLkluY2x1c2l2ZUZpbHRlcnMiVAoQSW5jbHVzaXZlRmlsdGVycxJA",
            "Cgx0ZW1wbGF0ZV9pZHMYASADKAsyKi5jb20uZGlnaXRhbGFzc2V0LmxlZGdl",
            "ci5hcGkudjEuSWRlbnRpZmllckJeCh5jb20uZGlnaXRhbGFzc2V0LmxlZGdl",
            "ci5hcGkudjFCG1RyYW5zYWN0aW9uRmlsdGVyT3V0ZXJDbGFzc6oCHkNvbS5E",
            "aWdpdGFsQXNzZXQuTGVkZ2VyLkFwaS5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.DigitalAsset.Ledger.Api.V1.ValueReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.DigitalAsset.Ledger.Api.V1.TransactionFilter), global::Com.DigitalAsset.Ledger.Api.V1.TransactionFilter.Parser, new[]{ "FiltersByParty" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.DigitalAsset.Ledger.Api.V1.Filters), global::Com.DigitalAsset.Ledger.Api.V1.Filters.Parser, new[]{ "Inclusive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters), global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters.Parser, new[]{ "TemplateIds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Used for filtering Transaction and Active Contract Set streams.
  /// Determines which on-ledger events will be served to the client.
  /// </summary>
  public sealed partial class TransactionFilter : pb::IMessage<TransactionFilter> {
    private static readonly pb::MessageParser<TransactionFilter> _parser = new pb::MessageParser<TransactionFilter>(() => new TransactionFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.DigitalAsset.Ledger.Api.V1.TransactionFilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter(TransactionFilter other) : this() {
      filtersByParty_ = other.filtersByParty_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter Clone() {
      return new TransactionFilter(this);
    }

    /// <summary>Field number for the "filters_by_party" field.</summary>
    public const int FiltersByPartyFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Com.DigitalAsset.Ledger.Api.V1.Filters>.Codec _map_filtersByParty_codec
        = new pbc::MapField<string, global::Com.DigitalAsset.Ledger.Api.V1.Filters>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Com.DigitalAsset.Ledger.Api.V1.Filters.Parser), 10);
    private readonly pbc::MapField<string, global::Com.DigitalAsset.Ledger.Api.V1.Filters> filtersByParty_ = new pbc::MapField<string, global::Com.DigitalAsset.Ledger.Api.V1.Filters>();
    /// <summary>
    /// Keys of the map determine which parties' on-ledger transactions are being queried.
    /// Values of the map determine which events are disclosed in the stream per party.
    /// At the minimum, a party needs to set an empty Filters message to receive any events.
    /// Each key must be a valid PartyIdString (as described in ``value.proto``).
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Com.DigitalAsset.Ledger.Api.V1.Filters> FiltersByParty {
      get { return filtersByParty_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FiltersByParty.Equals(other.FiltersByParty)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FiltersByParty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      filtersByParty_.WriteTo(output, _map_filtersByParty_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += filtersByParty_.CalculateSize(_map_filtersByParty_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionFilter other) {
      if (other == null) {
        return;
      }
      filtersByParty_.Add(other.filtersByParty_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            filtersByParty_.AddEntriesFrom(input, _map_filtersByParty_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Filters : pb::IMessage<Filters> {
    private static readonly pb::MessageParser<Filters> _parser = new pb::MessageParser<Filters>(() => new Filters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.DigitalAsset.Ledger.Api.V1.TransactionFilterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filters(Filters other) : this() {
      inclusive_ = other.inclusive_ != null ? other.inclusive_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filters Clone() {
      return new Filters(this);
    }

    /// <summary>Field number for the "inclusive" field.</summary>
    public const int InclusiveFieldNumber = 1;
    private global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters inclusive_;
    /// <summary>
    /// If not set, no filters will be applied.
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters Inclusive {
      get { return inclusive_; }
      set {
        inclusive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Inclusive, other.Inclusive)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inclusive_ != null) hash ^= Inclusive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (inclusive_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Inclusive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inclusive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inclusive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filters other) {
      if (other == null) {
        return;
      }
      if (other.inclusive_ != null) {
        if (inclusive_ == null) {
          Inclusive = new global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters();
        }
        Inclusive.MergeFrom(other.Inclusive);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inclusive_ == null) {
              Inclusive = new global::Com.DigitalAsset.Ledger.Api.V1.InclusiveFilters();
            }
            input.ReadMessage(Inclusive);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// If no internal fields are set, no data will be returned.
  /// </summary>
  public sealed partial class InclusiveFilters : pb::IMessage<InclusiveFilters> {
    private static readonly pb::MessageParser<InclusiveFilters> _parser = new pb::MessageParser<InclusiveFilters>(() => new InclusiveFilters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InclusiveFilters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.DigitalAsset.Ledger.Api.V1.TransactionFilterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InclusiveFilters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InclusiveFilters(InclusiveFilters other) : this() {
      templateIds_ = other.templateIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InclusiveFilters Clone() {
      return new InclusiveFilters(this);
    }

    /// <summary>Field number for the "template_ids" field.</summary>
    public const int TemplateIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.DigitalAsset.Ledger.Api.V1.Identifier> _repeated_templateIds_codec
        = pb::FieldCodec.ForMessage(10, global::Com.DigitalAsset.Ledger.Api.V1.Identifier.Parser);
    private readonly pbc::RepeatedField<global::Com.DigitalAsset.Ledger.Api.V1.Identifier> templateIds_ = new pbc::RepeatedField<global::Com.DigitalAsset.Ledger.Api.V1.Identifier>();
    /// <summary>
    /// A collection of templates.
    /// SHOULD NOT contain duplicates.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.DigitalAsset.Ledger.Api.V1.Identifier> TemplateIds {
      get { return templateIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InclusiveFilters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InclusiveFilters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!templateIds_.Equals(other.templateIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= templateIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      templateIds_.WriteTo(output, _repeated_templateIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += templateIds_.CalculateSize(_repeated_templateIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InclusiveFilters other) {
      if (other == null) {
        return;
      }
      templateIds_.Add(other.templateIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            templateIds_.AddEntriesFrom(input, _repeated_templateIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
